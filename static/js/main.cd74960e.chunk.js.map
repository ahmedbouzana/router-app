{"version":3,"sources":["components/navbar.jsx","components/products.jsx","components/posts.jsx","components/home.jsx","components/admin/users.jsx","components/admin/posts.jsx","components/admin/sidebar.jsx","components/admin/dashboard.jsx","components/productDetails.jsx","components/notFound.jsx","App.js","registerServiceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","Link","to","Products","state","products","id","name","this","map","product","key","concat","Component","Posts","_ref","match","queryString","parse","search","params","year","month","Home","Users","SideBar","Dashboard","sidebar","Route","path","component","ProductDetails","handleSave","_this","props","history","push","onClick","NotFound","App","navbar","className","Switch","render","Object","assign","sortBy","Redirect","from","exact","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","BrowserRouter","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cd74960e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/products\">Products</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/posts/2018/06\">Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/admin\">Admin</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Products extends Component {\r\n  state = {\r\n    products: [\r\n      { id: 1, name: \"Product 1\" },\r\n      { id: 2, name: \"Product 2\" },\r\n      { id: 3, name: \"Product 3\" }\r\n    ]\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Products</h1>\r\n        <ul>\r\n          {this.state.products.map(product => (\r\n            <li key={product.id}>\r\n              <Link to={`/products/${product.id}`}>{product.name}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\nconst Posts = ({ match }) => {\r\n  const result = queryString.parse(match.search);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Posts</h1>\r\n      Year: {match.params.year}, Month: {match.params.month}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return <h1>Home</h1>;\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst Users = () => {\r\n  return <h1>Admin Users</h1>;\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\n\r\nconst Posts = () => {\r\n  return (\r\n    <div>\r\n      <h1>Admin Posts</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SideBar = () => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/admin/posts\">Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/admin/users\">Users</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport Users from \"./users\";\r\nimport Posts from \"./posts\";\r\nimport SideBar from \"./sidebar\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst Dashboard = ({ match }) => {\r\n  return (\r\n    <div>\r\n      <h1>Admin Dashboard</h1>\r\n      <SideBar />\r\n      <Route path=\"/admin/users\" component={Users} />\r\n      <Route path=\"/admin/posts\" component={Posts} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ProductDetails extends Component {\r\n  handleSave = () => {\r\n    // Navigate to /products by push() or replace()\r\n    this.props.history.push(\"/products\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Product Details - {this.props.match.params.id} </h1>\r\n        <button onClick={this.handleSave}>Save</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductDetails;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport NavBar from \"./components/navbar\";\r\nimport Products from \"./components/products\";\r\nimport Posts from \"./components/posts\";\r\nimport Home from \"./components/home\";\r\nimport Dashboard from \"./components/admin/dashboard\";\r\nimport ProductDetails from \"./components/productDetails\";\r\nimport NotFound from \"./components/notFound\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route path=\"/products/:id\" component={ProductDetails} />\r\n            <Route\r\n              path=\"/products\"\r\n              render={props => <Products sortBy=\"newest\" {...props} />}\r\n            />\r\n            <Route path=\"/posts/:year?/:month?\" component={Posts} />\r\n            <Route path=\"/admin\" component={Dashboard} />\r\n            <Redirect from=\"/messages\" to=\"/posts\" />\r\n            <Route path=\"/not-found\" component={NotFound} />\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Redirect to=\"/not-found\" />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter> , document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}